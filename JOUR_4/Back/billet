db.createCollection("billets", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["id", "title", "content","userId"],
         properties: {
            id: {
               bsonType: "int",
               description: "must be an integer and is required"
            },
            title: {
               bsonType: "string",
               minLength: 5,
               maxLength: 20,
               description: "must be a string and is required"
            },
            content: {
              bsonType: "string",
              minLength: 20,
              maxLength: 250,
            },
            userId: {
              bsonType: "int",
              description: "must be a string and is required",
            },
         }
      }
   }
});

db.createCollection("comments", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["content", "postId", "authorId"],
         properties: {
            content: {
               bsonType: "string",
               minLength: 1,
               maxLength: 500,
               description: "must be a string with a length between 1 and 500 characters and is required"
            },
            postId: {
               bsonType: "int",
               description: "must be an integer and is required"
            },
            authorId: {
               bsonType: "int",
               description: "must be an integer and is required"
            },
         }
      }
   }
});

db.createCollection("members", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["id", "login", "email","password", "admin"],
         properties: {
            id: {
               bsonType: "int",
               description: "must be an integer and is required"
            },
            login: {
               bsonType: "string",
               minLength: 5,
               maxLength: 20,
               description: "must be a string and is required"
            },
            email: {
              bsonType: "string",
              pattern: "^[\\w._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$",
              description: "must be a string and match the regular expression pattern and is required"
            },
            password: {
              bsonType: "string",
              description: "must be a string and is required",
            },
            admin: {
               bsonType: "bool",
               description: "must be a boolean and is required"
            }
         }
      }
   }
})